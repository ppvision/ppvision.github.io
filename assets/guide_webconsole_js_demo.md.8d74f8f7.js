import{_ as s}from"./chunks/vi_demo.9f6bcf15.js";import{_ as n,o as a,c as l,Q as p}from"./chunks/framework.ffb2c379.js";const B=JSON.parse('{"title":"QuickJS","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"guide/webconsole/js_demo.md","filePath":"guide/webconsole/js_demo.md","lastUpdated":null}'),o={name:"guide/webconsole/js_demo.md"},e=p('<h1 id="quickjs" tabindex="-1">QuickJS <a class="header-anchor" href="#quickjs" aria-label="Permalink to &quot;QuickJS&quot;">​</a></h1><h2 id="" tabindex="-1"><a class="header-anchor" href="#" aria-label="Permalink to &quot;&quot;">​</a></h2><p><code>JS</code> 移植于<a href="https://bellard.org/quickjs/" target="_blank" rel="noreferrer">Quickjs</a><br> QuickJS是一个小型的嵌入式Javascript引擎。它几乎完整支持ES2020规范，包括Promise,箭头函数,模块、异步生成器、代理和 BigInt。</p><ul><li>小巧且易于嵌入集成,只需几个 C 文件，无外部依赖</li><li>启动时间极短的快速解释器</li><li>几乎完整的ES2020支持，包括模块，异步生成器。是其它嵌入式JS引擎不可比拟的。</li></ul><div class="info custom-block"><p class="custom-block-title">QuickJS作者 Fabrice Bellard。</p><p>法布里斯·贝拉法国著名的计算机程序员,你可能未听说其名但如下软件你一定很熟悉:</p><ul><li>FFmpeg、</li><li>QEMU</li><li>QuickJS</li></ul></div><h2 id="视频展示" tabindex="-1">视频展示 <a class="header-anchor" href="#视频展示" aria-label="Permalink to &quot;视频展示&quot;">​</a></h2><div class="bg-white mx-auto"><video class="max-h-full" controls><source src="'+s+`" type="video/mp4"></video></div><h2 id="示例-读取ds3231实时时钟-并使用lvgl-显示在屏幕上" tabindex="-1">示例 读取ds3231实时时钟，并使用LVGL 显示在屏幕上 <a class="header-anchor" href="#示例-读取ds3231实时时钟-并使用lvgl-显示在屏幕上" aria-label="Permalink to &quot;示例 读取ds3231实时时钟，并使用LVGL 显示在屏幕上&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> fs        </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;fs&quot;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> lvgl      </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;lvgl&quot;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> {GPIO,I2C,SPI} </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;rp2040&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;this is JS message</span><span style="color:#79B8FF;">\\r\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">,Object.</span><span style="color:#B392F0;">keys</span><span style="color:#E1E4E8;">(lvgl));</span></span>
<span class="line"><span style="color:#B392F0;">SetGpioCallBack</span><span style="color:#E1E4E8;">(isr_callback);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> btnEventTable </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">{};</span></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">reg_btn_callback</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">pin</span><span style="color:#E1E4E8;">,</span><span style="color:#FFAB70;">func</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> evList </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> btnEventTable[pin</span><span style="color:#F97583;">+</span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(evList){</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> exist </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> evList.</span><span style="color:#B392F0;">find</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">it</span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;">it </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> func);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">exist) btnEventTable[pin</span><span style="color:#F97583;">+</span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#E1E4E8;">].</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(func);</span></span>
<span class="line"><span style="color:#E1E4E8;">    } </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> btnEventTable[pin</span><span style="color:#F97583;">+</span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">[func];</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">isr_callback</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">pin</span><span style="color:#E1E4E8;">,</span><span style="color:#FFAB70;">mask</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(btnEventTable[pin</span><span style="color:#F97583;">+</span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#E1E4E8;">]){</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> f </span><span style="color:#F97583;">of</span><span style="color:#E1E4E8;"> btnEventTable[pin</span><span style="color:#F97583;">+</span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#E1E4E8;">]){</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">typeof</span><span style="color:#E1E4E8;">(f) </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;function&#39;</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#B392F0;">f</span><span style="color:#E1E4E8;">(pin,mask);</span></span>
<span class="line"><span style="color:#E1E4E8;">            } </span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    btnEventTable[pin</span><span style="color:#F97583;">+</span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [];</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">tm_format</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">tm</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">b2</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">v</span><span style="color:#E1E4E8;">){</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(v</span><span style="color:#F97583;">&gt;=</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> v;</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;0&quot;</span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;">v;}</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> year     </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> tm.</span><span style="color:#B392F0;">getFullYear</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> month    </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> tm.</span><span style="color:#B392F0;">getMonth</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">+</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> date     </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> tm.</span><span style="color:#B392F0;">getDate</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> hour     </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> tm.</span><span style="color:#B392F0;">getHours</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> minutes  </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> tm.</span><span style="color:#B392F0;">getMinutes</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> seconds  </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> tm.</span><span style="color:#B392F0;">getSeconds</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> mSec     </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> tm.</span><span style="color:#B392F0;">getMilliseconds</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// hour = (hour +8) %24</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> date_str </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`\${</span><span style="color:#E1E4E8;">year</span><span style="color:#9ECBFF;">}-\${</span><span style="color:#B392F0;">b2</span><span style="color:#9ECBFF;">(</span><span style="color:#E1E4E8;">month</span><span style="color:#9ECBFF;">)</span><span style="color:#9ECBFF;">}-\${</span><span style="color:#B392F0;">b2</span><span style="color:#9ECBFF;">(</span><span style="color:#E1E4E8;">date</span><span style="color:#9ECBFF;">)</span><span style="color:#9ECBFF;">} \${</span><span style="color:#B392F0;">b2</span><span style="color:#9ECBFF;">(</span><span style="color:#E1E4E8;">hour</span><span style="color:#9ECBFF;">)</span><span style="color:#9ECBFF;">}:\${</span><span style="color:#B392F0;">b2</span><span style="color:#9ECBFF;">(</span><span style="color:#E1E4E8;">minutes</span><span style="color:#9ECBFF;">)</span><span style="color:#9ECBFF;">}:\${</span><span style="color:#B392F0;">b2</span><span style="color:#9ECBFF;">(</span><span style="color:#E1E4E8;">seconds</span><span style="color:#9ECBFF;">)</span><span style="color:#9ECBFF;">}\`</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> date_str;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> n_num </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> pin_17 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">GPIO</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">17</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">wait_one_sec</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">sec</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Promise</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">resolve</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">err</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">setTimeout</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">resolve</span><span style="color:#E1E4E8;">(sec);</span></span>
<span class="line"><span style="color:#E1E4E8;">        }, sec </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1000</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    })</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">wait_btn_click</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">key</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Promise</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">resolve</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">err</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">do_it</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">k</span><span style="color:#E1E4E8;">,</span><span style="color:#FFAB70;">m</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">resolve</span><span style="color:#E1E4E8;">({key:k,mask:m})</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">reg_btn_callback</span><span style="color:#E1E4E8;">(key,do_it);</span></span>
<span class="line"><span style="color:#E1E4E8;">    })</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ds3231_rtc</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">i2c</span><span style="color:#E1E4E8;">,</span><span style="color:#FFAB70;">addr</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">bcd2dec</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">dec</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">parseInt</span><span style="color:#E1E4E8;">(dec.</span><span style="color:#B392F0;">toString</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">16</span><span style="color:#E1E4E8;">),</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    i2c.</span><span style="color:#B392F0;">write</span><span style="color:#E1E4E8;">(addr,[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">]);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> bytes            </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Uint8Array</span><span style="color:#E1E4E8;">(i2c.</span><span style="color:#B392F0;">read</span><span style="color:#E1E4E8;">(addr,</span><span style="color:#79B8FF;">7</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> [ss,mm,hh,d,m,y] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">].</span><span style="color:#B392F0;">map</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">i</span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;">bcd2dec</span><span style="color:#E1E4E8;">(bytes[i]));</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> datetime         </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Date</span><span style="color:#E1E4E8;">(y</span><span style="color:#F97583;">+</span><span style="color:#79B8FF;">2000</span><span style="color:#E1E4E8;">, m, d, hh, mm, ss);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> tm_Str </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">tm_format</span><span style="color:#E1E4E8;">(datetime);</span></span>
<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`Read:\`</span><span style="color:#E1E4E8;">,bytes ,</span><span style="color:#9ECBFF;">&quot;Datetime:&quot;</span><span style="color:#E1E4E8;">,tm_Str);</span></span>
<span class="line"><span style="color:#E1E4E8;">    lvgl.</span><span style="color:#B392F0;">text</span><span style="color:#E1E4E8;">(tm_Str);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> datetime;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">test_promise</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">wait_one_sec</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">then</span><span style="color:#E1E4E8;">( </span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">_</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;After 5 seconds&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">GPIO</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">Toggle</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">17</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">wait_btn_click</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">21</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">then</span><span style="color:#E1E4E8;">( </span><span style="color:#FFAB70;">obj</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> {key,mask} </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> obj;</span></span>
<span class="line"><span style="color:#E1E4E8;">            console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`KEY DOWN: \${</span><span style="color:#E1E4E8;">key</span><span style="color:#9ECBFF;">} \${</span><span style="color:#E1E4E8;">mask</span><span style="color:#9ECBFF;">}\`</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">GPIO</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">Toggle</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">17</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        })</span></span>
<span class="line"><span style="color:#E1E4E8;">    })</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> i2c_bus  </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">I2C</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">);</span><span style="color:#6A737D;">//clk_pin,sda_pin,clock</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> devs </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> i2c_bus.</span><span style="color:#B392F0;">scan</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`SCAN devs count \${</span><span style="color:#E1E4E8;">devs</span><span style="color:#9ECBFF;">.</span><span style="color:#79B8FF;">length</span><span style="color:#9ECBFF;">} =&gt; [\${</span><span style="color:#E1E4E8;">devs</span><span style="color:#9ECBFF;">.</span><span style="color:#B392F0;">map</span><span style="color:#9ECBFF;">(</span><span style="color:#79B8FF;">d</span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;">d</span><span style="color:#9ECBFF;">.</span><span style="color:#B392F0;">toString</span><span style="color:#9ECBFF;">(</span><span style="color:#79B8FF;">16</span><span style="color:#9ECBFF;">)).</span><span style="color:#B392F0;">join</span><span style="color:#9ECBFF;">(</span><span style="color:#9ECBFF;">&#39;,&#39;</span><span style="color:#9ECBFF;">)</span><span style="color:#9ECBFF;">}]\`</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(devs.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">setInterval</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">_</span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">                devs.</span><span style="color:#B392F0;">map</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">addr</span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(addr </span><span style="color:#F97583;">==</span><span style="color:#79B8FF;">0x68</span><span style="color:#E1E4E8;">) </span><span style="color:#B392F0;">ds3231_rtc</span><span style="color:#E1E4E8;">(i2c_bus,addr);</span></span>
<span class="line"><span style="color:#E1E4E8;">                })</span></span>
<span class="line"><span style="color:#E1E4E8;">            },</span><span style="color:#79B8FF;">1000</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;">(err){</span></span>
<span class="line"><span style="color:#E1E4E8;">        console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;ERR&quot;</span><span style="color:#E1E4E8;">,err);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">test_promise</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> fs        </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;fs&quot;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> lvgl      </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;lvgl&quot;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> {GPIO,I2C,SPI} </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;rp2040&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;this is JS message</span><span style="color:#005CC5;">\\r\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">,Object.</span><span style="color:#6F42C1;">keys</span><span style="color:#24292E;">(lvgl));</span></span>
<span class="line"><span style="color:#6F42C1;">SetGpioCallBack</span><span style="color:#24292E;">(isr_callback);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> btnEventTable </span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{};</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">reg_btn_callback</span><span style="color:#24292E;">(</span><span style="color:#E36209;">pin</span><span style="color:#24292E;">,</span><span style="color:#E36209;">func</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> evList </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> btnEventTable[pin</span><span style="color:#D73A49;">+</span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(evList){</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> exist </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> evList.</span><span style="color:#6F42C1;">find</span><span style="color:#24292E;">(</span><span style="color:#E36209;">it</span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;">it </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> func);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">exist) btnEventTable[pin</span><span style="color:#D73A49;">+</span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">].</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(func);</span></span>
<span class="line"><span style="color:#24292E;">    } </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> btnEventTable[pin</span><span style="color:#D73A49;">+</span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;">[func];</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isr_callback</span><span style="color:#24292E;">(</span><span style="color:#E36209;">pin</span><span style="color:#24292E;">,</span><span style="color:#E36209;">mask</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(btnEventTable[pin</span><span style="color:#D73A49;">+</span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">]){</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">for</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> f </span><span style="color:#D73A49;">of</span><span style="color:#24292E;"> btnEventTable[pin</span><span style="color:#D73A49;">+</span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">]){</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">typeof</span><span style="color:#24292E;">(f) </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;function&#39;</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6F42C1;">f</span><span style="color:#24292E;">(pin,mask);</span></span>
<span class="line"><span style="color:#24292E;">            } </span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    btnEventTable[pin</span><span style="color:#D73A49;">+</span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [];</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">tm_format</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">tm</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">b2</span><span style="color:#24292E;">(</span><span style="color:#E36209;">v</span><span style="color:#24292E;">){</span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(v</span><span style="color:#D73A49;">&gt;=</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> v;</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;0&quot;</span><span style="color:#D73A49;">+</span><span style="color:#24292E;">v;}</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> year     </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> tm.</span><span style="color:#6F42C1;">getFullYear</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> month    </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> tm.</span><span style="color:#6F42C1;">getMonth</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">+</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> date     </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> tm.</span><span style="color:#6F42C1;">getDate</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> hour     </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> tm.</span><span style="color:#6F42C1;">getHours</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> minutes  </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> tm.</span><span style="color:#6F42C1;">getMinutes</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> seconds  </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> tm.</span><span style="color:#6F42C1;">getSeconds</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> mSec     </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> tm.</span><span style="color:#6F42C1;">getMilliseconds</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// hour = (hour +8) %24</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> date_str </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`\${</span><span style="color:#24292E;">year</span><span style="color:#032F62;">}-\${</span><span style="color:#6F42C1;">b2</span><span style="color:#032F62;">(</span><span style="color:#24292E;">month</span><span style="color:#032F62;">)</span><span style="color:#032F62;">}-\${</span><span style="color:#6F42C1;">b2</span><span style="color:#032F62;">(</span><span style="color:#24292E;">date</span><span style="color:#032F62;">)</span><span style="color:#032F62;">} \${</span><span style="color:#6F42C1;">b2</span><span style="color:#032F62;">(</span><span style="color:#24292E;">hour</span><span style="color:#032F62;">)</span><span style="color:#032F62;">}:\${</span><span style="color:#6F42C1;">b2</span><span style="color:#032F62;">(</span><span style="color:#24292E;">minutes</span><span style="color:#032F62;">)</span><span style="color:#032F62;">}:\${</span><span style="color:#6F42C1;">b2</span><span style="color:#032F62;">(</span><span style="color:#24292E;">seconds</span><span style="color:#032F62;">)</span><span style="color:#032F62;">}\`</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> date_str;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> n_num </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> pin_17 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">GPIO</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">17</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">wait_one_sec</span><span style="color:#24292E;">(</span><span style="color:#E36209;">sec</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Promise</span><span style="color:#24292E;">((</span><span style="color:#E36209;">resolve</span><span style="color:#24292E;">, </span><span style="color:#E36209;">err</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">setTimeout</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">resolve</span><span style="color:#24292E;">(sec);</span></span>
<span class="line"><span style="color:#24292E;">        }, sec </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1000</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    })</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">wait_btn_click</span><span style="color:#24292E;">(</span><span style="color:#E36209;">key</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Promise</span><span style="color:#24292E;">((</span><span style="color:#E36209;">resolve</span><span style="color:#24292E;">, </span><span style="color:#E36209;">err</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">do_it</span><span style="color:#24292E;">(</span><span style="color:#E36209;">k</span><span style="color:#24292E;">,</span><span style="color:#E36209;">m</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">resolve</span><span style="color:#24292E;">({key:k,mask:m})</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">reg_btn_callback</span><span style="color:#24292E;">(key,do_it);</span></span>
<span class="line"><span style="color:#24292E;">    })</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ds3231_rtc</span><span style="color:#24292E;">(</span><span style="color:#E36209;">i2c</span><span style="color:#24292E;">,</span><span style="color:#E36209;">addr</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">bcd2dec</span><span style="color:#24292E;">(</span><span style="color:#E36209;">dec</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">parseInt</span><span style="color:#24292E;">(dec.</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">16</span><span style="color:#24292E;">),</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    i2c.</span><span style="color:#6F42C1;">write</span><span style="color:#24292E;">(addr,[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> bytes            </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Uint8Array</span><span style="color:#24292E;">(i2c.</span><span style="color:#6F42C1;">read</span><span style="color:#24292E;">(addr,</span><span style="color:#005CC5;">7</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> [ss,mm,hh,d,m,y] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">6</span><span style="color:#24292E;">].</span><span style="color:#6F42C1;">map</span><span style="color:#24292E;">(</span><span style="color:#E36209;">i</span><span style="color:#D73A49;">=&gt;</span><span style="color:#6F42C1;">bcd2dec</span><span style="color:#24292E;">(bytes[i]));</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> datetime         </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Date</span><span style="color:#24292E;">(y</span><span style="color:#D73A49;">+</span><span style="color:#005CC5;">2000</span><span style="color:#24292E;">, m, d, hh, mm, ss);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> tm_Str </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">tm_format</span><span style="color:#24292E;">(datetime);</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`Read:\`</span><span style="color:#24292E;">,bytes ,</span><span style="color:#032F62;">&quot;Datetime:&quot;</span><span style="color:#24292E;">,tm_Str);</span></span>
<span class="line"><span style="color:#24292E;">    lvgl.</span><span style="color:#6F42C1;">text</span><span style="color:#24292E;">(tm_Str);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> datetime;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">async</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test_promise</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">wait_one_sec</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">then</span><span style="color:#24292E;">( </span><span style="color:#D73A49;">async</span><span style="color:#24292E;"> </span><span style="color:#E36209;">_</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;After 5 seconds&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">GPIO</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">Toggle</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">17</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">wait_btn_click</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">21</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">then</span><span style="color:#24292E;">( </span><span style="color:#E36209;">obj</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> {key,mask} </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> obj;</span></span>
<span class="line"><span style="color:#24292E;">            console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`KEY DOWN: \${</span><span style="color:#24292E;">key</span><span style="color:#032F62;">} \${</span><span style="color:#24292E;">mask</span><span style="color:#032F62;">}\`</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">GPIO</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">Toggle</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">17</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        })</span></span>
<span class="line"><span style="color:#24292E;">    })</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">try</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> i2c_bus  </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">I2C</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">);</span><span style="color:#6A737D;">//clk_pin,sda_pin,clock</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> devs </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> i2c_bus.</span><span style="color:#6F42C1;">scan</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`SCAN devs count \${</span><span style="color:#24292E;">devs</span><span style="color:#032F62;">.</span><span style="color:#005CC5;">length</span><span style="color:#032F62;">} =&gt; [\${</span><span style="color:#24292E;">devs</span><span style="color:#032F62;">.</span><span style="color:#6F42C1;">map</span><span style="color:#032F62;">(</span><span style="color:#005CC5;">d</span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;">d</span><span style="color:#032F62;">.</span><span style="color:#6F42C1;">toString</span><span style="color:#032F62;">(</span><span style="color:#005CC5;">16</span><span style="color:#032F62;">)).</span><span style="color:#6F42C1;">join</span><span style="color:#032F62;">(</span><span style="color:#032F62;">&#39;,&#39;</span><span style="color:#032F62;">)</span><span style="color:#032F62;">}]\`</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(devs.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">setInterval</span><span style="color:#24292E;">(</span><span style="color:#E36209;">_</span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">                devs.</span><span style="color:#6F42C1;">map</span><span style="color:#24292E;">(</span><span style="color:#E36209;">addr</span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(addr </span><span style="color:#D73A49;">==</span><span style="color:#005CC5;">0x68</span><span style="color:#24292E;">) </span><span style="color:#6F42C1;">ds3231_rtc</span><span style="color:#24292E;">(i2c_bus,addr);</span></span>
<span class="line"><span style="color:#24292E;">                })</span></span>
<span class="line"><span style="color:#24292E;">            },</span><span style="color:#005CC5;">1000</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    }</span><span style="color:#D73A49;">catch</span><span style="color:#24292E;">(err){</span></span>
<span class="line"><span style="color:#24292E;">        console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;ERR&quot;</span><span style="color:#24292E;">,err);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">test_promise</span><span style="color:#24292E;">();</span></span></code></pre></div><h2 id="api-for-js" tabindex="-1">API for JS <a class="header-anchor" href="#api-for-js" aria-label="Permalink to &quot;API for JS&quot;">​</a></h2><h3 id="全局obj" tabindex="-1">全局obj <a class="header-anchor" href="#全局obj" aria-label="Permalink to &quot;全局obj&quot;">​</a></h3><ul><li>console.log</li><li>sleep</li><li>active_port</li><li>flash_mcu</li><li>setTimeout</li><li>setInterval</li><li>clearTimeout</li><li>parseJSON</li><li>SetGpioCallBack</li><li>loadScript</li></ul><h3 id="fs" tabindex="-1">fs <a class="header-anchor" href="#fs" aria-label="Permalink to &quot;fs&quot;">​</a></h3><ul><li>mount</li><li>mkfs</li><li>open</li><li>remove</li><li>rename</li><li>stat</li><li>readdir</li><li>rmdir</li><li>loadFile</li><li>loadScript</li></ul><h3 id="gpio" tabindex="-1">GPIO <a class="header-anchor" href="#gpio" aria-label="Permalink to &quot;GPIO&quot;">​</a></h3><ul><li>GPIO.Dir</li><li>GPIO.Pull</li><li>GPIO.Init</li><li>GPIO.Toggle</li><li>GPIO.On</li><li>GPIO.Off</li><li>GPIO.Get</li><li>GPIO.Set</li></ul><h3 id="i2c" tabindex="-1">I2C <a class="header-anchor" href="#i2c" aria-label="Permalink to &quot;I2C&quot;">​</a></h3><ul><li>reset</li><li>scan</li><li>read</li><li>write</li></ul><h3 id="spi" tabindex="-1">SPI <a class="header-anchor" href="#spi" aria-label="Permalink to &quot;SPI&quot;">​</a></h3><ul><li>init</li><li>read</li><li>write</li><li>WR</li><li>port</li><li>cs</li><li>baudrate</li><li>mode</li></ul>`,20),t=[e];function c(r,E,y,i,F,C){return a(),l("div",null,t)}const A=n(o,[["render",c]]);export{B as __pageData,A as default};

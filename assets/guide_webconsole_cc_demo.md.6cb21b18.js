import{_ as s}from"./chunks/vi_demo.9f6bcf15.js";import{_ as n,o as a,c as l,Q as p}from"./chunks/framework.ffb2c379.js";const u=JSON.parse('{"title":"cc","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"guide/webconsole/cc_demo.md","filePath":"guide/webconsole/cc_demo.md","lastUpdated":null}'),o={name:"guide/webconsole/cc_demo.md"},e=p(`<h1 id="cc" tabindex="-1">cc <a class="header-anchor" href="#cc" aria-label="Permalink to &quot;cc&quot;">​</a></h1><h2 id="" tabindex="-1"><a class="header-anchor" href="#" aria-label="Permalink to &quot;&quot;">​</a></h2><p><code>cc</code> 是运行在rp2040上的C编译、执行器，它可以生成:</p><ul><li>汇编语言</li><li>可执行的二进制文件。</li></ul><blockquote><p>前端词法分析由<a href="https://github.com/rswier/c4" target="_blank" rel="noreferrer">C4</a>实现.<br> 后端指令生成:<a href="https://github.com/jserv/amacc" target="_blank" rel="noreferrer">AMaCC</a>.</p></blockquote><h2 id="s-生成汇编" tabindex="-1">-s 生成汇编 <a class="header-anchor" href="#s-生成汇编" aria-label="Permalink to &quot;-s 生成汇编&quot;">​</a></h2><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">cc</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-s</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">file.c</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">cc</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-s</span><span style="color:#24292E;"> </span><span style="color:#032F62;">file.c</span></span></code></pre></div><div class="language-asm vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">asm</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">: </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> main(){</span></span>
<span class="line"><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">:      httpd()</span><span style="color:#6A737D;">;</span></span>
<span class="line"><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">:      // lvgl_test()</span><span style="color:#6A737D;">;</span></span>
<span class="line"><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">:      return </span><span style="color:#79B8FF;">0</span><span style="color:#6A737D;">;</span></span>
<span class="line"><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">: }</span></span>
<span class="line"><span style="color:#79B8FF;">20039800</span><span style="color:#E1E4E8;">    b580        </span><span style="color:#F97583;">push</span><span style="color:#E1E4E8;">    {r7, lr}</span></span>
<span class="line"><span style="color:#79B8FF;">20039802</span><span style="color:#E1E4E8;">    466f        </span><span style="color:#F97583;">mov</span><span style="color:#E1E4E8;">     r7, </span><span style="color:#79B8FF;">sp</span></span>
<span class="line"><span style="color:#79B8FF;">20039804</span><span style="color:#E1E4E8;">    4b03        ldr     r3, [pc, #</span><span style="color:#79B8FF;">12</span><span style="color:#E1E4E8;">]   </span><span style="color:#6A737D;">; 0x20039814</span></span>
<span class="line"><span style="color:#79B8FF;">20039806</span><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">4798</span><span style="color:#E1E4E8;">        blx     r3</span></span>
<span class="line"><span style="color:#79B8FF;">20039808</span><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">2000</span><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">movs</span><span style="color:#E1E4E8;">    r0, #</span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#E1E4E8;">2003980a    46bd        </span><span style="color:#F97583;">mov</span><span style="color:#E1E4E8;">     </span><span style="color:#79B8FF;">sp</span><span style="color:#E1E4E8;">, r7</span></span>
<span class="line"><span style="color:#E1E4E8;">2003980c    bd80        </span><span style="color:#F97583;">pop</span><span style="color:#E1E4E8;">     {r7, pc}</span></span>
<span class="line"><span style="color:#E1E4E8;">2003980e    46bd        </span><span style="color:#F97583;">mov</span><span style="color:#E1E4E8;">     </span><span style="color:#79B8FF;">sp</span><span style="color:#E1E4E8;">, r7</span></span>
<span class="line"><span style="color:#79B8FF;">20039810</span><span style="color:#E1E4E8;">    bd80        </span><span style="color:#F97583;">pop</span><span style="color:#E1E4E8;">     {r7, pc}</span></span>
<span class="line"><span style="color:#79B8FF;">20039812</span><span style="color:#E1E4E8;">    46c0        </span><span style="color:#F97583;">mov</span><span style="color:#E1E4E8;">     </span><span style="color:#79B8FF;">r8</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">r8</span></span>
<span class="line"><span style="color:#79B8FF;">20039814</span><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">1006</span><span style="color:#E1E4E8;"> b311   .</span><span style="color:#F97583;">word</span><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">0x1006b311</span><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">; httpd</span></span>
<span class="line"><span style="color:#79B8FF;">20039818</span><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">0000</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0000</span><span style="color:#E1E4E8;">   .</span><span style="color:#F97583;">word</span><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">0x00000000</span><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">; &quot;\\0\\0\\0\\0&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">1</span><span style="color:#24292E;">: </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> main(){</span></span>
<span class="line"><span style="color:#005CC5;">2</span><span style="color:#24292E;">:      httpd()</span><span style="color:#6A737D;">;</span></span>
<span class="line"><span style="color:#005CC5;">3</span><span style="color:#24292E;">:      // lvgl_test()</span><span style="color:#6A737D;">;</span></span>
<span class="line"><span style="color:#005CC5;">4</span><span style="color:#24292E;">:      return </span><span style="color:#005CC5;">0</span><span style="color:#6A737D;">;</span></span>
<span class="line"><span style="color:#005CC5;">5</span><span style="color:#24292E;">: }</span></span>
<span class="line"><span style="color:#005CC5;">20039800</span><span style="color:#24292E;">    b580        </span><span style="color:#D73A49;">push</span><span style="color:#24292E;">    {r7, lr}</span></span>
<span class="line"><span style="color:#005CC5;">20039802</span><span style="color:#24292E;">    466f        </span><span style="color:#D73A49;">mov</span><span style="color:#24292E;">     r7, </span><span style="color:#005CC5;">sp</span></span>
<span class="line"><span style="color:#005CC5;">20039804</span><span style="color:#24292E;">    4b03        ldr     r3, [pc, #</span><span style="color:#005CC5;">12</span><span style="color:#24292E;">]   </span><span style="color:#6A737D;">; 0x20039814</span></span>
<span class="line"><span style="color:#005CC5;">20039806</span><span style="color:#24292E;">    </span><span style="color:#005CC5;">4798</span><span style="color:#24292E;">        blx     r3</span></span>
<span class="line"><span style="color:#005CC5;">20039808</span><span style="color:#24292E;">    </span><span style="color:#005CC5;">2000</span><span style="color:#24292E;">        </span><span style="color:#D73A49;">movs</span><span style="color:#24292E;">    r0, #</span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">2003980a    46bd        </span><span style="color:#D73A49;">mov</span><span style="color:#24292E;">     </span><span style="color:#005CC5;">sp</span><span style="color:#24292E;">, r7</span></span>
<span class="line"><span style="color:#24292E;">2003980c    bd80        </span><span style="color:#D73A49;">pop</span><span style="color:#24292E;">     {r7, pc}</span></span>
<span class="line"><span style="color:#24292E;">2003980e    46bd        </span><span style="color:#D73A49;">mov</span><span style="color:#24292E;">     </span><span style="color:#005CC5;">sp</span><span style="color:#24292E;">, r7</span></span>
<span class="line"><span style="color:#005CC5;">20039810</span><span style="color:#24292E;">    bd80        </span><span style="color:#D73A49;">pop</span><span style="color:#24292E;">     {r7, pc}</span></span>
<span class="line"><span style="color:#005CC5;">20039812</span><span style="color:#24292E;">    46c0        </span><span style="color:#D73A49;">mov</span><span style="color:#24292E;">     </span><span style="color:#005CC5;">r8</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">r8</span></span>
<span class="line"><span style="color:#005CC5;">20039814</span><span style="color:#24292E;">    </span><span style="color:#005CC5;">1006</span><span style="color:#24292E;"> b311   .</span><span style="color:#D73A49;">word</span><span style="color:#24292E;">   </span><span style="color:#005CC5;">0x1006b311</span><span style="color:#24292E;">      </span><span style="color:#6A737D;">; httpd</span></span>
<span class="line"><span style="color:#005CC5;">20039818</span><span style="color:#24292E;">    </span><span style="color:#005CC5;">0000</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0000</span><span style="color:#24292E;">   .</span><span style="color:#D73A49;">word</span><span style="color:#24292E;">   </span><span style="color:#005CC5;">0x00000000</span><span style="color:#24292E;">      </span><span style="color:#6A737D;">; &quot;\\0\\0\\0\\0&quot;</span></span></code></pre></div><h2 id="o-生成可执行文件" tabindex="-1">-o 生成可执行文件 <a class="header-anchor" href="#o-生成可执行文件" aria-label="Permalink to &quot;-o 生成可执行文件&quot;">​</a></h2><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">cc</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-o</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">a.out</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">file.c</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">cc</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-o</span><span style="color:#24292E;"> </span><span style="color:#032F62;">a.out</span><span style="color:#24292E;"> </span><span style="color:#032F62;">file.c</span></span></code></pre></div><h2 id="编译执行" tabindex="-1">编译执行 <a class="header-anchor" href="#编译执行" aria-label="Permalink to &quot;编译执行&quot;">​</a></h2><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">cc</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">file.c</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">cc</span><span style="color:#24292E;"> </span><span style="color:#032F62;">file.c</span></span></code></pre></div><h2 id="视频展示" tabindex="-1">视频展示 <a class="header-anchor" href="#视频展示" aria-label="Permalink to &quot;视频展示&quot;">​</a></h2><div class="bg-white mx-auto"> hello <video class="max-h-full" controls><source src="`+s+`" type="video/mp4"></video></div><h2 id="示例代码" tabindex="-1">示例代码 <a class="header-anchor" href="#示例代码" aria-label="Permalink to &quot;示例代码&quot;">​</a></h2><div class="tip custom-block" style="padding-top:8px;"><h4>gpio.c</h4><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">#define</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">led_a</span><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">16</span></span>
<span class="line"><span style="color:#F97583;">#define</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">led_b</span><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">17</span></span>
<span class="line"><span style="color:#F97583;">#define</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">led_c</span><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">18</span></span>
<span class="line"><span style="color:#F97583;">#define</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">led_d</span><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">19</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> mask_val </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;">led_a</span><span style="color:#F97583;">|</span><span style="color:#79B8FF;">1</span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;">led_b</span><span style="color:#F97583;">|</span><span style="color:#79B8FF;">1</span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;">led_c</span><span style="color:#F97583;">|</span><span style="color:#79B8FF;">1</span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;">led_d;</span><span style="color:#6A737D;"> //34537472; </span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> led_val </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> led_idx </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">gpio_test_one</span><span style="color:#E1E4E8;">(){</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">sleep_ms</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">500</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">gpio_put_masked</span><span style="color:#E1E4E8;">(mask_val,led_val</span><span style="color:#F97583;">^=0x</span><span style="color:#79B8FF;">ffffffff</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">gpio_test_two</span><span style="color:#E1E4E8;">(){</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">sleep_ms</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">200</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    led_idx </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">led_idx</span><span style="color:#F97583;">%</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">gpio_put_masked</span><span style="color:#E1E4E8;">(mask_val,</span><span style="color:#79B8FF;">1</span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;">(led_a </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;">led_idx));</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">argc</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">char</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">**</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">argv</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    led_val </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> mask_val;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> case_n </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(argc </span><span style="color:#F97583;">&gt;</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">        case_n </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">atoi</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">argv</span><span style="color:#E1E4E8;">[</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">]);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">gpio_init_mask</span><span style="color:#E1E4E8;">(mask_val);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">gpio_set_dir_masked</span><span style="color:#E1E4E8;">(mask_val,mask_val);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">gpio_put_masked</span><span style="color:#E1E4E8;">(mask_val,led_val);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;GPIO Demo</span><span style="color:#79B8FF;">\\r\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">while</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#B392F0;">getchar_timeout_us</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">break</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> case_n) </span><span style="color:#B392F0;">gpio_test_one</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">gpio_test_two</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">#define</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">led_a</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">16</span></span>
<span class="line"><span style="color:#D73A49;">#define</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">led_b</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">17</span></span>
<span class="line"><span style="color:#D73A49;">#define</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">led_c</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">18</span></span>
<span class="line"><span style="color:#D73A49;">#define</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">led_d</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">19</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> mask_val </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">led_a</span><span style="color:#D73A49;">|</span><span style="color:#005CC5;">1</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">led_b</span><span style="color:#D73A49;">|</span><span style="color:#005CC5;">1</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">led_c</span><span style="color:#D73A49;">|</span><span style="color:#005CC5;">1</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">led_d;</span><span style="color:#6A737D;"> //34537472; </span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> led_val </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> led_idx </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">gpio_test_one</span><span style="color:#24292E;">(){</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">sleep_ms</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">500</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">gpio_put_masked</span><span style="color:#24292E;">(mask_val,led_val</span><span style="color:#D73A49;">^=0x</span><span style="color:#005CC5;">ffffffff</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">gpio_test_two</span><span style="color:#24292E;">(){</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">sleep_ms</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">200</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    led_idx </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">++</span><span style="color:#24292E;">led_idx</span><span style="color:#D73A49;">%</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">gpio_put_masked</span><span style="color:#24292E;">(mask_val,</span><span style="color:#005CC5;">1</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">(led_a </span><span style="color:#D73A49;">+</span><span style="color:#24292E;">led_idx));</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">argc</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">**</span><span style="color:#24292E;"> </span><span style="color:#E36209;">argv</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    led_val </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> mask_val;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> case_n </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(argc </span><span style="color:#D73A49;">&gt;</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">        case_n </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">atoi</span><span style="color:#24292E;">(</span><span style="color:#E36209;">argv</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">]);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">gpio_init_mask</span><span style="color:#24292E;">(mask_val);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">gpio_set_dir_masked</span><span style="color:#24292E;">(mask_val,mask_val);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">gpio_put_masked</span><span style="color:#24292E;">(mask_val,led_val);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;GPIO Demo</span><span style="color:#005CC5;">\\r\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">while</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#6F42C1;">getchar_timeout_us</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">break</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> case_n) </span><span style="color:#6F42C1;">gpio_test_one</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">gpio_test_two</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div></div><div class="tip custom-block" style="padding-top:8px;"><h4>flash.c</h4><span> 脱机烧录</span><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(){</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">active_port</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">flash</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;stm32f103&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;/upload/stm32f103_blink.bin&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">active_port</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">flash</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;stm32f103&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;/upload/stm32f103_blink.bin&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(){</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">active_port</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">flash</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;stm32f103&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;/upload/stm32f103_blink.bin&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">active_port</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">flash</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;stm32f103&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;/upload/stm32f103_blink.bin&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div></div><div class="tip custom-block" style="padding-top:8px;"><h4>flash_ex.c</h4><span> 进阶烧录。当按下return键时进行烧录操作</span></div><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> curr_key </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">gpio_callback</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">num</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">    curr_key </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">get_curr_key</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(){</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">reg_gpio_hook</span><span style="color:#E1E4E8;">(gpio_callback);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">while</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(curr_key){</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;key </span><span style="color:#79B8FF;">%d</span><span style="color:#9ECBFF;"> down</span><span style="color:#79B8FF;">\\r\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">,curr_key);</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(curr_key </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">24</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#B392F0;">flash</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;stm32f103&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;/upload/stm32f103_blink.bin&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">            curr_key </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> ;</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">sleep_ms_v</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#B392F0;">getchar_timeout_us</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">unreg_gpio_hook</span><span style="color:#E1E4E8;">(gpio_callback);</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">break</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> curr_key </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">gpio_callback</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">num</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">    curr_key </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">get_curr_key</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(){</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">reg_gpio_hook</span><span style="color:#24292E;">(gpio_callback);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">while</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(curr_key){</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;key </span><span style="color:#005CC5;">%d</span><span style="color:#032F62;"> down</span><span style="color:#005CC5;">\\r\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">,curr_key);</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(curr_key </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">24</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6F42C1;">flash</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;stm32f103&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;/upload/stm32f103_blink.bin&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">            curr_key </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> ;</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">sleep_ms_v</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#6F42C1;">getchar_timeout_us</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">unreg_gpio_hook</span><span style="color:#24292E;">(gpio_callback);</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">break</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div>`,19),c=[e];function t(r,E,y,i,F,d){return a(),l("div",null,c)}const h=n(o,[["render",t]]);export{u as __pageData,h as default};

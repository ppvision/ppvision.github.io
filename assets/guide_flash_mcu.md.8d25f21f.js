import{_ as s,o as a,c as l,Q as n}from"./chunks/framework.ffb2c379.js";const F=JSON.parse('{"title":"离线烧录mcu","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"guide/flash_mcu.md","filePath":"guide/flash_mcu.md","lastUpdated":null}'),p={name:"guide/flash_mcu.md"},o=n(`<h1 id="离线烧录mcu" tabindex="-1">离线烧录mcu <a class="header-anchor" href="#离线烧录mcu" aria-label="Permalink to &quot;离线烧录mcu&quot;">​</a></h1><p>PicoXtools的DapLink继承于<a href="https://daplink.io/" target="_blank" rel="noreferrer">DAP-Link</a> 其支持的MCU PicoXtools也是支持的。借助于openocd(pyOCD等)PicoXtools可以支持市面上绝大部分的MCU(仅支持SWD).</p><p><code>PicoXtools可以离线烧录存储于内部文件系统上的固件</code></p><p>MCU固件可以通过</p><ul><li>web控制台</li><li>ymode</li></ul><p>上传到PicoXtools文件系统<code>默认存放于/upload之下</code></p><div class="tip custom-block"><p class="custom-block-title">离线烧录支持的 MCU</p><p>因手边只有rp2040,stm32f103,stm32f411,nRF52832,nRF52833,nRF52840,rt1052的开发板 因此目前只有这几种MCU是经过完整测试的；其它厂家、型号的MCU需要验证。</p></div><h2 id="离线烧录mcu-1" tabindex="-1">离线烧录mcu <a class="header-anchor" href="#离线烧录mcu-1" aria-label="Permalink to &quot;离线烧录mcu&quot;">​</a></h2><ul><li>shell命令</li><li>web 控制台</li><li>c 语言API</li><li>JS 语言API</li></ul><div class="tip custom-block"><p class="custom-block-title">固件类型</p><p>目前仅支持.bin类型</p></div><h3 id="shell命令" tabindex="-1">shell命令 <a class="header-anchor" href="#shell命令" aria-label="Permalink to &quot;shell命令&quot;">​</a></h3><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">/:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">flash</span><span style="color:#E1E4E8;"> [rp2040</span><span style="color:#F97583;">|</span><span style="color:#B392F0;">stm32f103</span><span style="color:#F97583;">|</span><span style="color:#B392F0;">stm32f411</span><span style="color:#F97583;">|</span><span style="color:#B392F0;">nRF52832</span><span style="color:#F97583;">|</span><span style="color:#B392F0;">nRF52833</span><span style="color:#F97583;">|</span><span style="color:#B392F0;">nRF52840]</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">firmware.bin</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">/:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">flash</span><span style="color:#24292E;"> [rp2040</span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">stm32f103</span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">stm32f411</span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">nRF52832</span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">nRF52833</span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">nRF52840]</span><span style="color:#24292E;"> </span><span style="color:#032F62;">firmware.bin</span></span></code></pre></div><h3 id="c语言" tabindex="-1">c语言 <a class="header-anchor" href="#c语言" aria-label="Permalink to &quot;c语言&quot;">​</a></h3><ul><li><p>通过vi 创建文件 flash.c</p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(){</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">active_port</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">flash</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;stm32f103&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;/upload/stm32f103_blink.bin&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">active_port</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">flash</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;stm32f103&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;/upload/stm32f103_blink.bin&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(){</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">active_port</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">flash</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;stm32f103&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;/upload/stm32f103_blink.bin&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">active_port</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">flash</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;stm32f103&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;/upload/stm32f103_blink.bin&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div></li><li><p>cc 编译执行flash.c</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">cc</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">flash.c</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">cc</span><span style="color:#24292E;"> </span><span style="color:#032F62;">flash.c</span></span></code></pre></div></li></ul><h3 id="javascritp-语言" tabindex="-1">Javascritp 语言 <a class="header-anchor" href="#javascritp-语言" aria-label="Permalink to &quot;Javascritp 语言&quot;">​</a></h3><ul><li><p>通过vi 创建文件flash.js脚本</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">  </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">active_port</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">flash_mcu</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;stm32f103&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;/upload/stm32f103_blink.bin&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">active_port</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">flash_mcu</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;stm32f103&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;/upload/stm32f103_blink.bin&quot;</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">  </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">active_port</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">flash_mcu</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;stm32f103&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;/upload/stm32f103_blink.bin&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">active_port</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">flash_mcu</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;stm32f103&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;/upload/stm32f103_blink.bin&quot;</span><span style="color:#24292E;">);</span></span></code></pre></div><ul><li>执行 JS 脚本</li></ul><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">JS</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">flash.js</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">JS</span><span style="color:#24292E;"> </span><span style="color:#032F62;">flash.js</span></span></code></pre></div></li></ul><h2 id="openocd烧录mcu" tabindex="-1">openOCD烧录mcu <a class="header-anchor" href="#openocd烧录mcu" aria-label="Permalink to &quot;openOCD烧录mcu&quot;">​</a></h2><p>PicoXtools 是标准的 cmsis-dap(V2).通过openocd可以烧录各种MCU 如rp2040</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">openocd</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-f</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">interface/cmsis-dap.cfg</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-f</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">target/rp2040.cfg</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-s</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">tcl</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-c</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;adapter speed 10000&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-c</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;program firmware.elf verify  reset exit&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">openocd</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-f</span><span style="color:#24292E;"> </span><span style="color:#032F62;">interface/cmsis-dap.cfg</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-f</span><span style="color:#24292E;"> </span><span style="color:#032F62;">target/rp2040.cfg</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-s</span><span style="color:#24292E;"> </span><span style="color:#032F62;">tcl</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-c</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;adapter speed 10000&quot;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-c</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;program firmware.elf verify  reset exit&quot;</span></span></code></pre></div><div class="tip custom-block" style="padding-top:8px;"> - Linux下需要使用\`sudo\`来执行 否则会提示 <span style="color:red;">Error: unable to find a matching CMSIS-DAP devic</span></div>`,20),e=[o];function t(c,r,i,y,E,d){return a(),l("div",null,e)}const h=s(p,[["render",t]]);export{F as __pageData,h as default};
